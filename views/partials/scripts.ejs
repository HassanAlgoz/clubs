<script src="/js/lib/showdown.min.js"></script>
<script src="/js/lib/moment.js"></script>

<!-- Helper Functions -->
<script>

    console.log('scripts.ejs helper functions loaded')

    // CONSTANTS
    const PRESIDENT = "president"
    const MANAGER = "manager"
    const MEMBER = "member"
    const UNAPPROVED = "unapproved"


    const user = $('#user').val()
    
    const userRole = $('#userRole').val()
    function hasRole() {
        return userRole === PRESIDENT ||
        userRole === MANAGER ||
        userRole === MEMBER ||
        userRole === UNAPPROVED
    }


    moment.locale('ar-sa');

    const converter = new showdown.Converter();
    converter.setFlavor('github');

    function markdownBind($inputElement, $outputElement) {
        let markdown = $inputElement.val()
        let html = converter.makeHtml(markdown)
        $outputElement.html(html)
        $inputElement.on('keyup', () => {
            let markdown = $inputElement.val()
            let html = converter.makeHtml(markdown)
            $outputElement.html(html)
        })
    }

    function textBind($inputElement, $outputElement) {
        $outputElement.text($inputElement.val())
        $inputElement.on('keyup', () => {
            $outputElement.text($inputElement.val())
        })
    }

    function populateInputFields(dataObject, fieldsArray) {
        for(let i = 0; i < fieldsArray.length; ++i) {
            let fieldName = fieldsArray[i]
            $('#' + fieldName).val(dataObject[fieldName])
        }
    }

    function populateText(dataObject, fieldsArray) {
        for(let i = 0; i < fieldsArray.length; ++i) {
            let fieldName = fieldsArray[i]
            $('#' + fieldName).text(dataObject[fieldName])
        }
    }

    // function getParam(name) {
    //     name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
    //     var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
    //     var results = regex.exec(location.search);
    //     return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    // };

</script>